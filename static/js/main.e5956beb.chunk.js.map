{"version":3,"sources":["index.js"],"names":["REPORT_DATA","round5","x","Math","ceil","sum","values","valueof","value","Row","props","title","type","Admissions","min","max","onChange","e","update","target","style","border","verticalAlign","width","paddingRight","textAlign","LOS","fontWeight","margin","padding","toLocaleString","Calculator","state","bind","category","column","newData","this","setState","marginLeft","marginTop","onClick","colSpan","Object","keys","map","d","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mOAGMA,EAAc,CAChB,yBAA0B,CAAC,WAAc,KAAM,IAAO,KACtD,sBAAuB,CAAC,WAAc,IAAK,IAAO,KAClD,6BAA8B,CAAC,WAAc,KAAM,IAAO,IAC1D,uBAAwB,CAAC,WAAc,IAAK,IAAO,IACnD,4BAA6B,CAAC,WAAc,KAAM,IAAO,IACzD,iBAAkB,CAAC,WAAc,IAAK,IAAO,IAC7C,MAAS,CAAC,WAAc,KAAM,IAAO,KAGzC,SAASC,EAAOC,GACZ,OAA0B,EAAnBC,KAAKC,KAAKF,EAAI,GAGzB,SAASG,EAAIC,GAAqC,IAAD,EAA5BC,EAA4B,uDAAlB,SAACC,GAAD,OAAWA,GAClCH,EAAM,EADmC,cAEzBC,GAFyB,IAE7C,gCAAWE,EAAX,QACIH,GAAOE,EAAQC,IAH0B,8BAI7C,OAAOH,EAIX,SAASI,EAAIC,GACT,OAAO,+BACH,6BAAKA,EAAMC,QAEX,6BAAI,uBAAOC,KAAK,QAAQJ,MAAOE,EAAMG,WAAYC,IAAI,IAAIC,IAAI,OAClDC,SAAU,SAAAC,GAAC,OAAIP,EAAMQ,OAAOR,EAAMC,MAAO,aAAcM,EAAEE,OAAOX,QAChEY,MAAO,CAACC,OAAQ,kBAAmBC,cAAe,SAAUC,MAAO,YAE9E,qBAAIH,MAAO,CAACI,aAAc,QAA1B,UAAmC,uBAAOZ,KAAK,SAASJ,MAAOE,EAAMG,WAAYC,IAAI,IAAIC,IAAI,OACnDC,SAAU,SAAAC,GAAC,OAAIP,EAAMQ,OAAOR,EAAMC,MAAO,aAAcM,EAAEE,OAAOX,QAChEY,MAAO,CACHC,OAAQ,kBACRI,UAAW,SACXH,cAAe,SACfC,MAAO,UANrD,aAWA,6BACI,uBAAOX,KAAK,QAAQJ,MAAOE,EAAMgB,IAAKZ,IAAI,IAAIC,IAAI,OAC3CC,SAAU,SAAAC,GAAC,OAAIP,EAAMQ,OAAOR,EAAMC,MAAO,MAAOM,EAAEE,OAAOX,QACzDY,MAAO,CAACC,OAAQ,kBAAmBC,cAAe,SAAUC,MAAO,YAC9E,+BAAI,uBAAOX,KAAK,SAASJ,MAAOE,EAAMgB,IAAKZ,IAAI,IAAIC,IAAI,OAC5CC,SAAU,SAAAC,GAAC,OAAIP,EAAMQ,OAAOR,EAAMC,MAAO,MAAOM,EAAEE,OAAOX,QACzDY,MAAO,CAACG,MAAO,OAAQE,UAAW,SAAUJ,OAAQ,kBAAmBC,cAAe,YAFjG,WAMA,qBAAIF,MAAO,CACPG,MAAO,QACPE,UAAW,SACXE,WAAY,SACZC,OAAQ,MACRN,cAAe,SACfO,QAAS,UANb,UAOI5B,EAAOS,EAAMG,WAAaH,EAAMgB,IAAM,KAAKI,iBAP/C,gB,IAcFC,E,kDACF,WAAYrB,GAAQ,IAAD,8BACf,cAAMA,IACDsB,MAAQhC,EACb,EAAKkB,OAAS,EAAKA,OAAOe,KAAZ,gBAHC,E,0CAMnB,SAAOC,EAAUC,EAAQ3B,GAErB,IAAM4B,EAAO,2BAAOC,KAAKL,MAAME,IAAlB,kBAA8BC,GAAU3B,IACrD6B,KAAKC,SAAL,eAAgBJ,EAAWE,M,oBAG/B,WAAU,IAAD,OACL,OAAQ,sBAAKhB,MAAO,CAACmB,WAAY,OAAQC,UAAW,QAA5C,UACJ,wBAAQC,QAAS,kBAAM,EAAKH,SAAStC,IAArC,oCACA,kCACI,gCACA,+BACI,uBACA,oBAAI0C,QAAS,EAAGtB,MAAO,CAACK,UAAW,UAAnC,+BACA,oBAAIiB,QAAS,EAAGtB,MAAO,CAACK,UAAW,UAAnC,oCACA,uDAGJ,kCACCkB,OAAOC,KAAK5C,GAAa6C,KAAI,SAAAC,GAAC,OAC3B,cAACrC,EAAD,CAAaE,MAAOmC,EAAGjC,WAAY,EAAKmB,MAAMc,GAAGjC,WAAYa,IAAK,EAAKM,MAAMc,GAAGpB,IAC3ER,OAAQ,EAAKA,QADR4B,MAGd,+BACI,uCACA,uBACA,qBAAI1B,MAAO,CACPK,UAAW,SACXE,WAAY,QAFhB,UAGItB,EAAIsC,OAAOrC,OAAO+B,KAAKL,QAAQ,SAAAc,GAAC,OAAIA,EAAEjC,cAAYiB,iBAHtD,aAKA,uBACA,uBACA,qBAAIV,MAAO,CACPK,UAAW,SACXE,WAAY,QAFhB,UAGItB,EAAIsC,OAAOrC,OAAO+B,KAAKL,QAAQ,SAAAc,GAAC,OAAI7C,EAAO6C,EAAEjC,WAAaiC,EAAEpB,IAAM,QAAMI,iBAH5E,sBASR,uBACA,uCACA,qFAEI,uBAFJ,0U,GAnDaiB,IAAMC,WA+D/BC,IAASC,OACL,cAACnB,EAAD,IACAoB,SAASC,eAAe,W","file":"static/js/main.e5956beb.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst REPORT_DATA = {\n    \"VFO Detainee-Nonmurder\": {\"Admissions\": 2250, \"LOS\": 190},\n    \"VFO Detainee-Murder\": {\"Admissions\": 250, \"LOS\": 545},\n    \"Nonviolent Felony Detainee\": {\"Admissions\": 1200, \"LOS\": 45},\n    \"Misdemeanor Detainee\": {\"Admissions\": 700, \"LOS\": 45},\n    \"Technical Parole Violator\": {\"Admissions\": 1310, \"LOS\": 30},\n    \"City Sentenced\": {\"Admissions\": 500, \"LOS\": 90},\n    \"Other\": {\"Admissions\": 1600, \"LOS\": 30}\n}\n\nfunction round5(x) {\n    return Math.ceil(x / 5) * 5;\n}\n\nfunction sum(values, valueof = (value) => value) {\n    let sum = 0;\n    for (const value of values)\n        sum += valueof(value)\n    return sum;\n}\n\n\nfunction Row(props) {\n    return <tr>\n        <td>{props.title}</td>\n\n        <td><input type=\"range\" value={props.Admissions} min=\"0\" max=\"2500\"\n                   onChange={e => props.update(props.title, \"Admissions\", e.target.value)}\n                   style={{border: \"1px solid black\", verticalAlign: \"middle\", width: \"70px\"}}\n        /></td>\n        <td style={{paddingRight: \"30px\"}}><input type=\"number\" value={props.Admissions} min=\"0\" max=\"2500\"\n                                                  onChange={e => props.update(props.title, \"Admissions\", e.target.value)}\n                                                  style={{\n                                                      border: \"1px solid black\",\n                                                      textAlign: \"center\",\n                                                      verticalAlign: \"middle\",\n                                                      width: \"60px\"\n                                                  }}\n        /> people\n        </td>\n\n        <td>\n            <input type=\"range\" value={props.LOS} min=\"0\" max=\"1000\"\n                   onChange={e => props.update(props.title, \"LOS\", e.target.value)}\n                   style={{border: \"1px solid black\", verticalAlign: \"middle\", width: \"70px\"}}/></td>\n        <td><input type=\"number\" value={props.LOS} min=\"0\" max=\"1000\"\n                   onChange={e => props.update(props.title, \"LOS\", e.target.value)}\n                   style={{width: \"60px\", textAlign: \"center\", border: \"1px solid black\", verticalAlign: \"middle\"}}\n        /> days\n        </td>\n\n        <td style={{\n            width: \"120px\",\n            textAlign: \"center\",\n            fontWeight: \"bolder\",\n            margin: \"2px\",\n            verticalAlign: \"middle\",\n            padding: \"0 15px\"\n        }}>{round5(props.Admissions * props.LOS / 365).toLocaleString()} people\n        </td>\n\n    </tr>\n}\n\n\nclass Calculator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = REPORT_DATA;\n        this.update = this.update.bind(this);\n    }\n\n    update(category, column, value) {\n        // We must create a new object and avoid modifying the original REPORT_DATA!\n        const newData = {...this.state[category], [column]: +value};\n        this.setState({[category]: newData});\n    }\n\n    render() {\n        return (<div style={{marginLeft: \"10px\", marginTop: \"10px\"}}>\n            <button onClick={() => this.setState(REPORT_DATA)}>Report recommendations</button>\n            <table>\n                <thead>\n                <tr>\n                    <td/>\n                    <td colSpan={2} style={{textAlign: \"center\"}}>Annual Admissions</td>\n                    <td colSpan={2} style={{textAlign: \"center\"}}>Average Length of Stay</td>\n                    <td>Daily Population</td>\n                </tr>\n                </thead>\n                <tbody>\n                {Object.keys(REPORT_DATA).map(d =>\n                    <Row key={d} title={d} Admissions={this.state[d].Admissions} LOS={this.state[d].LOS}\n                         update={this.update}/>\n                )}\n                <tr>\n                    <td>Total</td>\n                    <td/>\n                    <td style={{\n                        textAlign: \"center\",\n                        fontWeight: \"bold\"\n                    }}>{sum(Object.values(this.state), d => d.Admissions).toLocaleString()} people\n                    </td>\n                    <td/>\n                    <td/>\n                    <td style={{\n                        textAlign: \"center\",\n                        fontWeight: \"bold\"\n                    }}>{sum(Object.values(this.state), d => round5(d.Admissions * d.LOS / 365)).toLocaleString()} people\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n\n            <br/>\n            <h4>NOTES</h4>\n            <p>\n                Average LOS is calculated only for those discharged.\n                <br/>\n                City sentenced bed count only reflects those entering with a city sentence. Detainees, specifically\n                nonviolent felony and misdemeanor detainees, may enter as pretrial detainees but leave after a city\n                sentence. This calculator accounts for their total jail stay, but categorizes them by their initial\n                admission status.\n            </p>\n        </div>)\n    }\n}\n\nReactDOM.render(\n    <Calculator/>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}